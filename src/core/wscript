#! /usr/bin/env python
#
# This file is part of the Ideal libraries
# Copyright (C) 2009 Rafael Fernández López <ereslibre@ereslibre.es>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public License
# along with this library; see the file COPYING.LIB.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
# Boston, MA 02110-1301, USA.
#

import Options

checkInotify = '''#include <sys/inotify.h>
                  int main(int argc, char **argv)
                  {
                      return 0;
                  }'''

def configure(conf):
    if not Options.options.release:
        conf.sub_config('tests')
    conf.env['LIB_CORE'] = ['dl', 'pthread']
    conf.check_cfg(package = 'liburiparser', args = '--cflags --libs')
    conf.check_cfg(package = 'libpcrecpp', args = '--cflags --libs')
    if not conf.env['HAVE_LIBURIPARSER'] == 1:
        conf.fatal('Cannot continue without liburiparser. Please, install the development package and try again')
    conf.check_tool('misc')
    conf.check(fragment = checkInotify, msg = 'Checking for inotify', define_name = 'HAVE_INOTIFY')

def build(bld):
    bld.new_task_gen(
        features     = 'cxx cshlib',
        source       = bld.glob('*.cpp') +
                       bld.glob('interfaces/*.cpp') +
                       bld.glob('private/*.cpp') +
                       bld.glob('private/posix/*.cpp'),
        target       = 'idealcore',
        includes     = '..',
        uselib       = ['CORE',
                        'LIBURIPARSER',
                        'LIBPCRECPP'],
        vnum         = bld.env['LIBVERSION']
        )
    bld.new_task_gen('subst',
                     source = 'idealcore.pc.in',
                     target = 'idealcore.pc',
                     dict   = {'PREFIX' : bld.env['PREFIX'],
                               'LIBS' : '-lidealcore',
                               'VERSION' : bld.env['LIBVERSION']}
                     )
    if not bld.env['RELEASE']:
        bld.add_subdirs('tests')
    bld.install_files('${PREFIX}/lib/pkgconfig', 'idealcore.pc')
    bld.install_files('${PREFIX}/include/ideal/core', '*.h')
    bld.install_files('${PREFIX}/include/ideal/core/interfaces', 'interfaces/*.h')

